[tool:pytest]
# Pytest configuration for TimeWarp IDE

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --cov=core
    --cov=features
    --cov=tools
    --cov-report=html:test_results/coverage_html
    --cov-report=xml:test_results/coverage.xml
    --cov-report=term-missing
    --cov-fail-under=70
    --html=test_results/report.html
    --self-contained-html

# Test markers
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests
    gui: GUI tests requiring display
    network: Tests requiring network access
    performance: Performance benchmarking tests

# Minimum version
minversion = 7.0

# Timeout for tests (in seconds)
timeout = 300

# Warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning:pygame.*
    ignore::PendingDeprecationWarning

# Coverage configuration
[coverage:run]
source = core, features, tools
omit = 
    */tests/*
    */test_*
    *_test.py
    */venv/*
    */.venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    
    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug
    
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    
    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:
    
    # Don't complain about abstract methods
    @(abc\.)?abstractmethod

ignore_errors = True
show_missing = True
precision = 2

[coverage:html]
directory = test_results/coverage_html