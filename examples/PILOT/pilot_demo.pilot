T: ===================================
T: PILOT NATIVE COMPILER DEMONSTRATION
T: ===================================
T: This program was compiled from PILOT source code
T: into a standalone Linux executable!
T: 
T: Features demonstrated:
T: 1. Text output with variable interpolation
T: 2. User input and variable storage
T: 3. Conditional execution (Y:, MT:)
T: 4. Jumps and labels (J:, L:)
T: 5. Conditional jumps J(condition):
T: 6. Variable updates (U:)
T: 7. Match-based text output (MT:)
T: 
T: Let's start the demo!
T: 
A: USERNAME
T: Hello *USERNAME*!
Y: *USERNAME* == "admin"
MT: Welcome, administrator!
T: 
T: Enter your age:
A: AGE
Y: *AGE* == "25"
MT: You're 25 years old - what a great age!
T: 
T: Do you like programming? (yes/no)
A: LIKES_PROG
J(*LIKES_PROG* == "yes"): PROGRAMMER
T: That's okay, not everyone likes programming.
J: CONTINUE
L: PROGRAMMER
T: Excellent! Programming is awesome!
T: You should try compiling more PILOT programs!
L: CONTINUE
T: 
T: This demo shows that PILOT programs can be:
T: - Compiled to native machine code
T: - Run without Python or interpreters
T: - Distributed as standalone executables
T: - Execute with full performance
T: 
T: The JAMES PILOT compiler successfully converts
T: PILOT source code into efficient C code, then
T: compiles it with GCC into a Linux executable.
T: 
T: Thank you for trying the PILOT Native Compiler!
T: Program completed successfully.
END